syntax = "v1"

type groupCreateRequest {
	UserID     uint   `header:"User-ID"`
	Mode       int8   `json:"mode,optional"` // 模式  1 直接创建模式 2 选人创建模式
	Name       string `json:"name,optional"`
	IsSearch   bool   `json:"isSearch,optional"`   // 是否可以搜到
	Size       int    `json:"size,optional"`       // 群规模
	UserIDList []uint `json:"userIdList,optional"` // 用户id列表
}
type groupCreateResponse {
}

type groupInfoRequest {
	UserID uint `header:"User-ID"`
	ID     uint `path:"id"` // 群id
}

type UserInfo {
	UserID   uint   `json:"userId"`
	Avatart  string `json:"avatart"`
	Nickname string `json:"nickname"`
}
type groupInfoResponse {
	GroupID              uint                  `json:"groupId"`                                                  // 群id
	Title                string                `json:"title"`                                                    // 群名称
	Abstract             string                `json:"abstract"`                                                 // 群介绍
	MemberCount          int                   `json:"memberCount"`                                              // 群用户总数
	MemberOnlineCount    int                   `json:"memberOnlineCount"`                                        // 群在线用户总数
	Avatar               string                `json:"avatar"`                                                   // 群头像
	Creator              UserInfo              `json:"creator"`                                                  // 群主
	AdminList            []UserInfo            `json:"adminList"`                                                // 管理员列表
	Role                 int8                  `json:"role"`                                                     // 角色	 1 群主 2 群管理员 3 群成员
	IsProhibition        bool                  `json:"isProhibition"`                                            // 是否开启了全员禁言
	ProhibitionTime      *int                  `json:"prohibitionTime"`                                          // 自己的禁言时间
	IsSearch             bool                  `json:"isSearch"`                                                 // 是否可以被搜索
	Verification         *int8                 `json:"verification,optional"  conf:"verification"`               // 群验证
	IsInvite             *bool                 `json:"isInvite,optional"  conf:"is_invite"`                      // 是否可邀请好友
	IsTemporarySession   *bool                 `json:"isTemporarySession,optional"  conf:"is_temporary_session"` // 是否开启临时会话
	VerificationQuestion *VerificationQuestion `json:"verificationQuestion,optional" conf:"verification_question"`
}
type VerificationQuestion {
	Problem1 *string `json:"problem1,optional" conf:"problem1"`
	Problem2 *string `json:"problem2,optional" conf:"problem2"`
	Problem3 *string `json:"problem3,optional" conf:"problem3"`
	Answer1  *string `json:"answer1,optional" conf:"answer1"`
	Answer2  *string `json:"answer2,optional" conf:"answer2"`
	Answer3  *string `json:"answer3,optional" conf:"answer3"`
}

type groupUpdateRequest {
	UserID               uint                  `header:"User-ID"`
	ID                   uint                  `json:"id"`                                                       // 群id
	IsSearch             *bool                 `json:"isSearch,optional"  conf:"is_search"`                      // 是否可以被搜索
	Avatar               *string               `json:"avatar,optional"  conf:"avatar"`                           // 群头像
	Abstract             *string               `json:"abstract,optional"  conf:"abstract"`                       // 群简介
	Title                *string               `json:"title,optional"  conf:"title"`                             // 群名
	Verification         *int8                 `json:"verification,optional"  conf:"verification"`               // 群验证
	IsInvite             *bool                 `json:"isInvite,optional"  conf:"is_invite"`                      // 是否可邀请好友
	IsTemporarySession   *bool                 `json:"isTemporarySession,optional"  conf:"is_temporary_session"` // 是否开启临时会话
	IsProhibition        *bool                 `json:"isProhibition,optional" conf:"is_prohibition"`             // 是否开启全员禁言
	VerificationQuestion *VerificationQuestion `json:"verificationQuestion,optional" conf:"verification_question"`
}

type groupUpdateResponse {
}

type groupRemoveRequest {
	UserID uint `header:"User-ID"`
	ID     uint `path:"id"` // 群id
}

type groupRemoveResponse {
}

type groupMemberRequest {
	UserID uint   `header:"User-ID"`
	ID     uint   `form:"id"`
	Page   int    `form:"page,optional"`
	Limit  int    `form:"limit,optional"`
	Sort   string `form:"sort,optional"`
}

type GroupMemberInfo {
	UserID         uint   `json:"userId"`
	UserNickname   string `json:"userNickname"`
	Avatar         string `json:"avatar"`
	IsOnline       bool   `json:"isOnline"`
	Role           int8   `json:"role"`
	MemberNickname string `json:"memberNickname"`
	CreatedAt      string `json:"createdAt"`
	NewMsgDate     string `json:"newMsgDate"`
}
type groupMemberResponse {
	List  []GroupMemberInfo `json:"list"`
	Count int               `json:"count"`
}

type groupMemberRemoveRequest {
	UserID   uint `header:"User-ID"`
	ID       uint `form:"id"`       // 群id
	MemberID uint `form:"memberId"` // 成员id
}
type groupMemberAddRequest {
	UserID       uint   `header:"User-ID"`
	ID           uint   `json:"id"`           // 群id
	MemberIDList []uint `json:"memberIdList"` // 成员id列表
}

type groupMemberRemoveResponse {
}
type groupMemberAddResponse {
}

type groupMemberNicknameUpdateRequest {
	UserID   uint   `header:"User-ID"`
	ID       uint   `json:"id"`       // 群id
	MemberID uint   `json:"memberId"` // 成员id
	Nickname string `json:"nickname"` // 昵称
}

type groupMemberNicknameUpdateResponse {
}

type groupMemberRoleUpdateRequest {
	UserID   uint `header:"User-ID"`
	ID       uint `json:"id"`       // 群id
	MemberID uint `json:"memberId"` // 成员id
	Role     int8 `json:"role"`
}
type groupMemberRoleUpdateResponse {
}

type groupfriendsListRequest {
	UserID uint `header:"User-ID"`
	ID     uint `form:"id"` // 群id
}
type GroupfriendsResponse {
	UserId    uint   `json:"userId"`
	Avatar    string `json:"avatar"`
	Nickname  string `json:"nickname"`
	IsInGroup bool   `json:"isInGroup"` // 是否在群里面
}

type groupfriendsListResponse {
	List  []GroupfriendsResponse `json:"list"`
	Count int                    `json:"count"`
}

type groupSearchRequest {
	UserID uint   `header:"User-ID"`
	Key    string `form:"key,optional"` // 用户id和昵称
	Page   int    `form:"page,optional"`
	Limit  int    `form:"limit,optional"`
}
type GroupSearchResponse {
	GroupID         uint   `json:"groupId"`
	Title           string `json:"title"`
	Abstract        string `json:"abstract"`
	Avatar          string `json:"avatar"`
	IsInGroup       bool   `json:"isInGroup"`       // 我是否在群里面
	UserCount       int    `json:"userCount"`       // 群用户总数
	UserOnlineCount int    `json:"userOnlineCount"` // 群用户在线总数
}
type groupSearchListResponse {
	List  []GroupSearchResponse `json:"list"`
	Count int                   `json:"count"`
}

type GroupValidRequest {
	UserID  uint `header:"User-ID"`
	GroupID uint `path:"id"`
}

type GroupValidResponse {
	Verification         int8                 `json:"verification"`         // 好友验证
	VerificationQuestion VerificationQuestion `json:"verificationQuestion"` // 问题和答案，但是答案不要返回
}

type AddGroupRequest {
	UserID               uint                  `header:"User-ID"`
	GroupID              uint                  `json:"groupID"`
	Verify               string                `json:"verify,optional"`               // 验证消息
	VerificationQuestion *VerificationQuestion `json:"verificationQuestion,optional"` // 问题和答案
}
type AddGroupResponse {
}
type groupValidListRequest {
	UserID uint `header:"User-ID"`
	Page   int  `form:"page,optional"`
	Limit  int  `form:"limit,optional"`
}

type GroupValidInfoResponse {
	ID                   uint                  `json:"id"` // 验证id
	GrouID               uint                  `json:"grouId"`
	UserID               uint                  `json:"userId"`
	UserNickname         string                `json:"userNickname"`
	UserAvatar           string                `json:"userAvatar"`
	Status               int8                  `json:"status"`               // 状态
	Flag                 string                `json:"flag"`                 // send  rev
	AdditionalMessages   string                `json:"additionalMessages"`   // 附加消息
	VerificationQuestion *VerificationQuestion `json:"verificationQuestion"` // 验证问题
	Title                string                `json:"title"`
	Avatar               string                `json:"avatar"` // 群头像
	CreatedAt            string                `json:"createdAt"`
	Type                 int8                  `json:"type"` // 类型  1 加群  2 退群
}
type groupValidListResponse {
	List  []GroupValidInfoResponse `json:"list"`
	Count int                      `json:"count"`
}

type groupValidStatusRequest {
	UserID  uint `header:"User-ID"`
	ValidID uint `json:"validId"` // 验证id
	Status  int8 `json:"status"`  // 状态
}
type groupValidStatusResponse {
}

type groupProhibitionUpdateRequest {
	UserID          uint `header:"User-ID"`
	GroupID         uint `json:"groupId"` // 群id
	MemberID        uint `json:"memberId"`
	ProhibitionTime *int `json:"prohibitionTime,optional"` // 禁言时间 单位分钟
}
type groupProhibitionUpdateResponse {
}

type groupHistoryRequest {
	UserID uint `header:"User-ID"`
	ID     uint `path:"id"`
	Page   int  `form:"page,optional"`
	Limit  int  `form:"limit,optional"`
}

type groupHistoryListResponse {
}

type groupHistoryDeleteRequest {
	UserID    uint   `header:"User-ID"`
	ID        uint   `path:"id"`
	Page      int    `form:"page,optional"`
	Limit     int    `form:"limit,optional"`
	MsgIDList []uint `json:"msgIdList"`
}

type groupHistoryDeleteResponse {
}

type groupSessionRequest {
	UserID uint `header:"User-ID"`
	Page   int  `form:"page,optional"`
	Limit  int  `form:"limit,optional"`
}

type GroupSessionResponse {
	GroupID       uint   `json:"groupId"`
	Title         string `json:"title"`
	Avatar        string `json:"avatar"`
	NewMsgDate    string `json:"newMsgDate"`    // 最新的消息
	NewMsgPreview string `json:"newMsgPreview"` // 最新的消息内容
	IsTop         bool   `json:"isTop"`         // 是否置顶
}

type groupSessionListResponse {
	List  []GroupSessionResponse `json:"list"`
	Count int                    `json:"count"`
}

type groupTopRequest {
	UserID  uint `header:"User-ID"`
	GroupID uint `json:"groupId"` // 需要置顶的群id
	IsTop   bool `json:"isTop"`   // true 置顶  false取消置顶
}
type groupTopResponse {
}
type groupMyRequest {
	UserID uint `header:"User-ID"`
	Mode   int8 `form:"mode"` // 1 我创建的群聊 2 我加入的群聊
	Page   int  `form:"page,optional"`
	Limit  int  `form:"limit,optional"`
}
type GroupMyResponse {
	GroupID          uint   `json:"groupId"`
	GroupTitle       string `json:"groupTitle"`
	GroupAvatar      string `json:"groupAvatar"`
	GroupMemberCount int    `json:"groupMemberCount"`
	Role             int8   `json:"role"` // 角色
	Mode             int8   `json:"mode"` // 模式  1 我创建的群聊 2 我加入的群聊
}

type groupMyListResponse {
	List  []GroupMyResponse `json:"list"`
	Count int               `json:"count"`
}

type groupChatRequest {
	UserID uint `header:"User-ID"`
}

type groupChatResponse {
}

service group {
	@handler groupCreate
	post /api/group/group (groupCreateRequest) returns (groupCreateResponse) // 创建群
	@handler groupInfo
	get /api/group/group/:id (groupInfoRequest) returns (groupInfoResponse) // 群信息
	@handler groupUpdate
	put /api/group/group (groupUpdateRequest) returns (groupUpdateResponse) // 群更新
	@handler groupRemove
	delete /api/group/group/:id (groupRemoveRequest) returns (groupRemoveResponse) // 群解散
	@handler groupMember
	get /api/group/member (groupMemberRequest) returns (groupMemberResponse) // 群成员列表
	@handler groupMemberRemove
	delete /api/group/member (groupMemberRemoveRequest) returns (groupMemberRemoveResponse) // 把用户踢出群聊
	@handler groupMemberAdd
	post /api/group/member (groupMemberAddRequest) returns (groupMemberAddResponse) // 邀请用户进入群聊
	@handler groupMemberNicknameUpdate
	put /api/group/member/nickname (groupMemberNicknameUpdateRequest) returns (groupMemberNicknameUpdateResponse) // 修改群成员昵称
	@handler groupMemberRoleUpdate
	put /api/group/member/role (groupMemberRoleUpdateRequest) returns (groupMemberRoleUpdateResponse) // 修改群成员角色
	@handler groupfriendsList
	get /api/group/friends (groupfriendsListRequest) returns (groupfriendsListResponse) // 我的好友哪些在这个群里面
	@handler groupSearch
	get /api/group/search (groupSearchRequest) returns (groupSearchListResponse) // 群搜索
	@handler groupValid
	get /api/group/valid/:id (GroupValidRequest) returns (GroupValidResponse) // 群验证
	@handler groupValidAdd
	post /api/group/valid (AddGroupRequest) returns (AddGroupResponse) // 加群
	@handler groupValidList
	get /api/group/valid (groupValidListRequest) returns (groupValidListResponse) // 群验证列表
	@handler groupValidStatus
	put /api/group/valid/status (groupValidStatusRequest) returns (groupValidStatusResponse) // 群验证状态更新
	@handler groupProhibitionUpdate
	put /api/group/member/prohibition (groupProhibitionUpdateRequest) returns (groupProhibitionUpdateResponse) // 群验证状态更新
	@handler groupHistory
	get /api/group/history/:id (groupHistoryRequest) returns (groupHistoryListResponse) // 聊天记录 不用groupHistoryListResponse
	@handler groupHistoryDelete
	delete /api/group/history/:id (groupHistoryDeleteRequest) returns (groupHistoryDeleteResponse) // 删除聊天记录
	@handler groupSession
	get /api/group/session (groupSessionRequest) returns (groupSessionListResponse) // 群会话列表
	@handler groupTop
	put /api/group/top (groupTopRequest) returns (groupTopResponse) // 置顶或取消置顶群聊
	@handler groupMy
	get /api/group/my (groupMyRequest) returns (groupMyListResponse) // 我创建的群聊和我加入的群聊
	@handler groupChat
	get /api/group/ws/chat (groupChatRequest) returns (groupChatResponse) // 群聊
}

type groupListRequest {
	Page  int    `form:"page,optional"`
	Limit int    `form:"limit,optional"`
	Key   string `form:"key,optional"`
}
type GroupListInfoResponse {
	ID                uint       `json:"id"`
	CreatedAt         string     `json:"createdAt"`
	Title             string     `json:"title"`
	Abstract          string     `json:"abstract"`
	Avatar            string     `json:"avatar"`
	Creater           UserInfo   `json:"creater"`           // 群主
	AdminList         []UserInfo `json:"adminList"`         // 管理员列表
	MessageCount      int        `json:"messageCount"`      // 群消息条数
	MemberCount       int        `json:"memberCount"`       // 群成员人数
	MemberOnlineCount int        `json:"memberOnlineCount"` // 群成员在线人数
}
type groupListResponse {
	List  []GroupListInfoResponse `json:"list"`
	Count int                     `json:"count"`
}
type groupListRemoveRequest {
	IdList []uint `json:"idList"`
}
type groupListRemoveResponse {
}
type groupMessageListRequest {
	ID    uint `path:"id"`
	Page  int  `form:"page,optional"`
	Limit int  `form:"limit,optional"`
}
type GroupMessageListInfoResponse {
}
type groupMessageListResponse {
	List  []GroupMessageListInfoResponse `json:"list"`
	Count int                            `json:"count"`
}
type groupMessageRemoveRequest {
	IdList []uint `json:"idList"`
}
type groupMessageRemoveResponse {
}

@server(
	group: Admin
	middleware : AdminMiddleware
)
service group {
	@handler groupList
	get /api/group/groups (groupListRequest) returns (groupListResponse) // 群聊列表
	@handler groupListRemove
	delete /api/group/groups (groupListRemoveRequest) returns (groupListRemoveResponse) // 群聊删除
	@handler groupMessageList
	get /api/group/messages/:id (groupMessageListRequest) returns (groupMessageListResponse) // 群聊消息列表
	@handler groupMessageRemove
	delete /api/group/messages (groupMessageRemoveRequest) returns (groupMessageRemoveResponse) // 群聊消息删除
}

// goctl api go -api group_api.api -dir . --home ../../template